---
title: "Coding Principles"
content:
  - subtitle: "SOLID Principles"
    principles:
      - name: "Single Responsibility Principle (SRP)"
        description: "A class should have only one reason to change. This ensures that a class addresses only one concern, making the system more modular and easier to maintain."
      - name: "Open/Closed Principle (OCP)"
        description: "Software entities should be open for extension but closed for modification. This allows adding new features without altering existing code."
      - name: "Liskov Substitution Principle (LSP)"
        description: "Subtypes must be substitutable for their base types. This ensures that a derived class is truly an extension of the base class."
      - name: "Interface Segregation Principle (ISP)"
        description: "Clients should not be forced to depend on interfaces they do not use. This makes the system more modular and easier to understand."
      - name: "Dependency Inversion Principle (DIP)"
        description: "High-level modules should not depend on low-level modules; both should depend on abstractions. This decouples software modules."
  - subtitle: "Other Principles"
    principles:
      - name: "DRY (Don't Repeat Yourself)"
        description: "Every piece of knowledge or logic should exist in a single place. This reduces repetition and potential errors."
      - name: "KISS (Keep It Simple, Stupid)"
        description: "Systems work best when kept simple. Avoid unnecessary complexity."
      - name: "YAGNI (You Aren't Gonna Need It)"
        description: "Avoid adding functionality until it's necessary. Prevents over-engineering."
      - name: "Law of Demeter (Principle of Least Knowledge)"
        description: "An object should only communicate with its immediate neighbors. This leads to a more decoupled system."
      - name: "Separation of Concerns"
        description: "Different functionalities should be separated into distinct sections or modules. This makes the system more modular."
